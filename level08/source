#include <stdlib.h>
#include <stdio.h>
#include <stdbool.h>


unsigned int log_wrapper(FILE *file, const char *str_1, const char *str_2)
{
	char dest[264];

	strcpy(dest, str_1);
	snprintf(&dest[strlen(dest)], 254 - strlen(dest), str_2);
	dest[strcspn(dest, "\n")] = 0;
	fprintf(file, "LOG: %s\n", dest);
	return (0);
}


int	main(int argc, const char **argv, const char **envp)
{
	FILE *log_file;
	FILE *input_file;
	int fd;
	char buf;
	char dest[104];

	buf = -1;
	if (argc != 2)
		printf("Usage: %s filename\n", *argv);
	log_file = fopen("./backups/.log", "w");
	if (!log_file)
	{
		printf("ERROR: Failed to open %s\n", "./backups/.log");
		exit(1);
	}
	log_wrapper(log_file, "Starting back up: ", argv[1]);
	input_file = fopen(argv[1], "r");
	if (!input_file)
	{
		printf("ERROR: Failed to open %s\n", argv[1]);
		exit(1);
	}
	strcpy(dest, "./backups/");
	strncat(dest, argv[1], 99 - strlen(dest));
	fd = open(dest, 193, 432);
	if (fd < 0)
	{
		printf("ERROR: Failed to open %s%s\n", "./backups/", argv[1]);
		exit(1);
	}
	while (1)
	{
		buf = fgetc(input_file);
		if ( buf == -1 )
			break;
		write(fd, &buf, 1);
	}
	log_wrapper(log_file, "Finished back up ", argv[1]);
	fclose(input_file);
	close(fd);
	return 0;
}
